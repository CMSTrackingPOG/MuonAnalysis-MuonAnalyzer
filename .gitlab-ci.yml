variables:
  CMSSW_RELEASE: CMSSW_10_5_0
  CMSSW_SCRAM_ARCH: slc7_amd64_gcc820

image: gitlab-registry.cern.ch/ci-tools/ci-worker:cc7

before_script:
  - "yum install -y openssl"
  - source /cvmfs/grid.cern.ch/etc/profile.d/setup-cvmfs-ui.sh
  - source /cvmfs/cms.cern.ch/cmsset_default.sh

build-master:
    tags: [ cvmfs,docker ]
    stage: build
    only: [ master ]
    except: [ pushes ]
    script:
        - ls
        - pwd
        - export BASE_HERE=${PWD}
        - cd ..
        - export SCRAM_ARCH=${CMSSW_RELEASE_ARCH}
        - scram p CMSSW ${CMSSW_RELEASE}
        - cd ${CMSSW_RELEASE}/src
        - eval $(scram runtime -sh)
        - export OFFICIAL_CMSSW_REPO=https://github.com/cms-sw/cmssw.git
        - export CMSSW_GIT_REFERENCE=/cvmfs/cms.cern.ch/cmssw.git.daily
        - git clone --branch $CMSSW_VERSION --no-checkout --reference $CMSSW_GIT_REFERENCE --origin official-cmssw $OFFICIAL_CMSSW_REPO .
        - git fetch official-cmssw  $CMSSW_VERSION
        - git config core.sparsecheckout true
        - echo -e '/.clang-format\n/.clang-tidy\n/.gitignore' > .git/info/sparse-checkout
        - git checkout -b from-$CMSSW_VERSION $CMSSW_VERSION
        - git read-tree -mu HEAD
        - git config user.email "noreply@cern.ch"
        - git config user.name "Noreply"
        - mkdir -p MuonAnalysis/MuonAnalyzer
        - cp -a ${BASE_HERE} MuonAnalysis/MuonAnalyzer
        - scram b -j 5
        - ls -d $CMSSW_BASE/src/.git  $CMSSW_BASE/tmp
        - rm -rf $CMSSW_BASE/src/.git 
        - rm -rf $CMSSW_BASE/tmp
        - cd ../..
        - tar czvf $HERE_BASE/build.tar.gz $CMSSW_VERSION
    artifacts:
        when: on_success
        expire_in: 1 days
        paths: 
            - build.tar.gz

stages:
  - build