variables:
  CMSSW_RELEASE: CMSSW_10_6_4_patch1
  CMSSW_SCRAM_ARCH: slc7_amd64_gcc820
  SSH_SERVER_HOSTKEYS: lxplus ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDTA/5AzXgbkSapknIPDoEePTM1PzIBSiyDnpZihdDXKzm8UdXxCDJLUVjBwc1JfBjnaXPEeBKZDuozDss/m98m5qQu+s2Dks000V8cUFTU+BFotzRWX0jWSBpmzse0477b40X2XCPqX0Cqfx9yHdkuMlyF0kJRxXgsGTcwzwbmvqNHJdHHYJJz93hGpBhYMREcDN5VOxXz6Ack3X7xfF29xaC91oOAqq75O11LXF5Y4kAeN9kDG8o6Zsqk4c5at5aqWqzZfnnVtGjhkgU2Mt5aKwptaFMe0Z3ys/zZM4SnsE9NfompnnWsiKk2y09UvrbzuYPWLt43Fp3+IFqRJvBX

image: gitlab-registry.cern.ch/ci-tools/ci-worker:cc7

before_script:
  - "yum install -y openssl"
  - source /cvmfs/grid.cern.ch/etc/profile.d/setup-cvmfs-ui.sh
  - source /cvmfs/cms.cern.ch/cmsset_default.sh

build-master:
    tags: [ cvmfs,docker ]
    stage: build
    only: [ master ]
    except: [ pushes ]
    script:
        - ls
        - pwd
        - cd ..
        - export SCRAM_ARCH=${CMSSW_RELEASE_ARCH}
        - scram p CMSSW ${CMSSW_RELEASE}
        - cd ${CMSSW_RELEASE}/src
        - eval $(scram runtime -sh)
        - export OFFICIAL_CMSSW_REPO=https://github.com/cms-sw/cmssw.git
        - export CMSSW_GIT_REFERENCE=/cvmfs/cms.cern.ch/cmssw.git.daily
        - git clone --branch $CMSSW_VERSION --no-checkout --reference $CMSSW_GIT_REFERENCE --origin official-cmssw $OFFICIAL_CMSSW_REPO .
        - git fetch official-cmssw  $CMSSW_VERSION
        - git config core.sparsecheckout true
        - echo -e '/.clang-format\n/.clang-tidy\n/.gitignore' > .git/info/sparse-checkout
        - git checkout -b from-$CMSSW_VERSION $CMSSW_VERSION
        - git read-tree -mu HEAD
        - git config user.email "noreply@cern.ch"
        - git config user.name "Noreply"
        - mkdir -p MuonAnalysis/MuonAnalyzer
        - cp -a $CI_PROJECT_DIR/* MuonAnalysis/MuonAnalyzer/
        - scram b -j 5
        - ls -d $CMSSW_BASE/src/.git  $CMSSW_BASE/tmp
        - rm -rf $CMSSW_BASE/src/.git 
        - rm -rf $CMSSW_BASE/tmp
        - cd ../..
        - tar czvf $CI_PROJECT_DIR/build.tar.gz $CMSSW_VERSION
    artifacts:
        when: on_success
        expire_in: 1 days
        paths: 
            - build.tar.gz

test-code:
    tags: [ cvmfs ] 
    stage: test-simple
    script:
        - tar xzvf build.tar.gz
        - cd CMSSW_*/src
        - scram b projectrename
        - eval $(scram runtime -sh)
        - export CMS_PATH=/cvmfs/cms-ib.cern.ch/week0
        - CMSSW_VERSION_SPLIT=($(echo $CMSSW_VERSION | tr _ \ ))
        - export CMSSW_MAJOR=${CMSSW_VERSION_SPLIT[1]}
        - export CMSSW_MINOR=${CMSSW_VERSION_SPLIT[2]}
        # https://gitlab.cern.ch/gitlabci-examples/kinit_example
        - test -d ~/.ssh || mkdir -p ~/.ssh
        - test -f ~/.ssh/known_hosts || touch ~/.ssh/known_hosts
        - grep -q "^lxplus ssh-rsa"  ~/.ssh/known_hosts || echo "$SSH_SERVER_HOSTKEYS" >> ~/.ssh/known_hosts
        - echo "${CMS_SERVICE_SECRET}" | kinit -f ${CMS_SERVICE_USER}@CERN.CH
        - scp ${CMS_SERVICE_USER}@lxplus:/eos/cms/store/group/phys_muon/MuonPOGIntegration/rootfiles/UL18/events_MINIAOD_SingleMuon_numEvent100.root .
        - cmsRun MuonAnalysis/MuonAnalyzer/test/run_muonAnalizer_cfg.py inputFiles=file:events_MINIAOD_SingleMuon_numEvent100.root globalTag=106X_dataRun2_v28 maxEvents=-1 isMC=0 isFullAOD=0 outputFile=output.root


stages:
  - build
  - test-simple
